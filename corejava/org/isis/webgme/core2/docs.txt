Storage:
	String sha;
	Map<String relid,String sha> children;
	Map<String name, String value> attributes;
	
	Set<Node> nodes = INVERSE(Node.storage)

Node:
	Storage storage;

	Node parent;
	Set<Node> children = INVERSE(Node.parent);
	
	Node basetype;
	Set<Node> subtypes = INVERSE(Node.basetype);
	
	Set<Query> queries = INVERSE(Query.node);
	
	Boolean loadSelf = OR(queries.loadSelf);
	Boolean loadParent = OR(queries.loadParent);
	Boolean loadChildren = OR(queries.loadChildren);
	Boolean loadBasetype = OR(queries.loadBasetype);
	Boolean loadSubtypes = OR(queries.loadSubtypes);
	
Client:
	Set<Query> queries = INVERSE(Query.client);
	
Query:
	Node node;
	Client client:
	Storage storage = node.storage;

	Query parent = node.parent != null ? Query(node.parent, client) : null;
	Collection<Query> children = node.children != null ? Query(node.children, client) : null;

	Boolean loadSelf = selfPattern OR parent.loadChildren OR OR(children.loadAncestor) OR OR(subtypes.loadAncestor);
	Boolean loadChildren = childrenPattern;
	Boolean loadAncestor = ancestorPattern OR OR(children.loadAncestor) OR OR(subtypes.loadAncestor);
	
	Boolean selfPattern;
	Boolean childrenPattern;
	Boolean ancestorPattern;
